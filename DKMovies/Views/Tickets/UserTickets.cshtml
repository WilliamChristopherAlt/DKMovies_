@model List<DKMovies.Models.Ticket>

@{
    ViewData["Title"] = "Your Ticket History";
}

<form method="get" class="row g-2 mb-4 align-items-end">
    <div class="col-md-4">
        <label class="form-label">Search by Movie or Theater</label>
        <input type="text" name="search" value="@Context.Request.Query["search"]" class="form-control" />
    </div>
    <div class="col-md-3">
        <label class="form-label">Status</label>
        <select name="status" class="form-select">
            <option value="">All</option>
            <option value="PENDING" selected="@("PENDING" == Context.Request.Query["status"])">Pending</option>
            <option value="CONFIRMED" selected="@("CONFIRMED" == Context.Request.Query["status"])">Confirmed</option>
            <option value="CANCELLED" selected="@("CANCELLED" == Context.Request.Query["status"])">Cancelled</option>
        </select>
    </div>
    <div class="col-md-3">
        <label class="form-label">Sort By</label>
        <select name="sort" class="form-select">
            <option value="">Newest First</option>
            <option value="date_asc" selected="@("date_asc" == Context.Request.Query["sort"])">Oldest First</option>
            <option value="price_asc" selected="@("price_asc" == Context.Request.Query["sort"])">Price Low to High</option>
            <option value="price_desc" selected="@("price_desc" == Context.Request.Query["sort"])">Price High to Low</option>
        </select>
    </div>
    <div class="col-md-2 d-grid">
        <button type="submit" class="btn btn-primary"><i class="bi bi-filter"></i> Apply</button>
    </div>
</form>


<h2 class="mb-4">Your Ticket History</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}


@if (!Model.Any())
{
    <p class="text-muted">You haven’t purchased any tickets yet.</p>
}
else
{
    <div class="list-group">
        @foreach (var ticket in Model)
        {
            var showtime = ticket.ShowTime;
            var movie = showtime.Movie;
            var auditorium = showtime.Auditorium;
            var theater = auditorium.Theater;
            var seatLabels = ticket.TicketSeats
            .OrderBy(s => s.Seat.RowLabel)
            .ThenBy(s => s.Seat.SeatNumber)
            .Select(s => $"{s.Seat.RowLabel}{s.Seat.SeatNumber}");

            var posterPath = string.IsNullOrWhiteSpace(movie.PosterImagePath)
            ? Url.Content("~/images/movie_posters/default.jpg")
            : Url.Content($"~/images/movie_posters/{movie.PosterImagePath}");

            <div class="list-group-item mb-4 shadow-sm border rounded p-3">
                <div class="row">
                    <!-- Poster -->
                    <div class="col-md-2">
                        <img src="@posterPath" alt="@movie.Title" class="img-fluid rounded" style="object-fit: cover;" />
                    </div>

                    <!-- Info -->
                    <div class="col-md-10">
                        <h5 class="mb-2">@movie.Title</h5>
                        <div><strong>Status:</strong> <span class="badge bg-@(ticket.Status == TicketStatus.PENDING ? "warning text-dark" : ticket.Status == TicketStatus.CONFIRMED ? "success" : "secondary")">@ticket.Status</span></div>
                        <div><strong>Theater:</strong> @theater.Name - @theater.Location</div>
                        <div><strong>Auditorium:</strong> @auditorium.ID</div>
                        <div><strong>Showtime:</strong> @showtime.StartTime.ToString("f")</div>
                        <div><strong>Seats:</strong> @string.Join(", ", seatLabels)</div>
                        <div><strong>Total Seats:</strong> @seatLabels.Count()</div>
                        <div><strong>Total Price:</strong> @ticket.TotalPrice.ToString("C")</div>
                        <div><strong>Purchased On:</strong> @ticket.PurchaseTime.ToString("g")</div>

                        @if (ticket.Status == TicketStatus.PENDING && ticket.ShowTime.StartTime > DateTime.Now)
                        {
                            <form asp-action="CancelTicket" asp-controller="Tickets" method="post" class="mt-3" onsubmit="return confirm('Are you sure you want to cancel this ticket?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="ticketId" value="@ticket.ID" />
                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                    <i class="bi bi-x-circle"></i> Cancel Ticket
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
