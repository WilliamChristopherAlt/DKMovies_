@model List<DKMovies.Models.ShowTime>
@{
    var movie = ViewData["Movie"] as DKMovies.Models.Movie;
    var date = ViewData["Date"] as string;
    var selectedTheaterId = ViewData["SelectedTheaterId"]?.ToString();

    // Get ALL available dates from ALL showtimes
    var availableDates = Model.Select(s => s.StartTime.Date).Distinct().OrderBy(d => d).ToList();

    // Default to the first date if none is selected
    if (string.IsNullOrEmpty(date) || !availableDates.Any(d => d.ToString("yyyy-MM-dd") == date))
    {
        date = availableDates.First().ToString("yyyy-MM-dd");
    }

    var selectedDate = DateTime.Parse(date);

    // All theaters that have showtimes on the selected date
    var theaters = Model
        .Where(s => s.StartTime.Date == selectedDate)
        .Select(s => s.Auditorium.Theater)
        .Distinct()
        .OrderBy(t => t.Name)
        .ToList();
}

<h2>Select Showtime for @movie.Title</h2>

<hr />

<!-- ✅ Always show all dates -->
<div class="mb-3">
    <h5>Select a Date:</h5>
    <div class="btn-group" role="group">
        @foreach (var availableDate in availableDates)
        {
            <a href="@Url.Action("OrderTicket", new { id = movie.ID, date = availableDate.ToString("yyyy-MM-dd") })"
               class="btn btn-sm @(availableDate.ToString("yyyy-MM-dd") == date ? "btn-primary" : "btn-outline-primary")">
                @availableDate.ToString("dddd, MMM dd")
            </a>
        }
    </div>
</div>



@if (!theaters.Any())
{
    <div class="alert alert-warning">
        No theaters found for the selected date.
    </div>
}

<!-- ✅ Showtimes grouped by theater -->
@foreach (var theater in theaters)
{
    var showtimes = Model
        .Where(s => s.StartTime.Date == selectedDate && s.Auditorium.Theater.ID == theater.ID)
        .OrderBy(s => s.StartTime)
        .ToList();

    if (showtimes.Any())
    {
        <div class="mb-4">
            <h5>@theater.Name - @theater.Location</h5>
            <div class="btn-group" role="group">
                @foreach (var showtime in showtimes)
                {
                    <a href="@Url.Action("OrderTicketDetails", new { id = showtime.ID })"
                       class="btn btn-sm btn-outline-success">
                        @showtime.StartTime.ToString("hh:mm tt")
                    </a>
                }
            </div>
        </div>
    }
}
